{"version":3,"sources":["components/FilterForm.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/personService.js","App.js","index.js"],"names":["FilterForm","value","onChange","PersonForm","name","number","handleNameChange","handleNumberChange","handleSubmit","type","onClick","Persons","persons","handleDelete","map","person","key","id","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterValue","setFilter","notification","setNotification","useEffect","personService","handleUpdate","newPerson","servicePerson","setTimeout","event","target","preventDefault","oldperson","find","window","confirm","filter","toLowerCase","includes","newPersons","Number","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.940c176c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterForm = ({value, onChange}) => {\r\n  return(\r\n    <div>\r\n      filter persons: <input value={value} onChange={onChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterForm","import React from 'react'\r\n\r\nconst PersonForm = ({name, number, handleNameChange,\r\n   handleNumberChange, handleSubmit}) => {\r\n  return(\r\n    <form>\r\n    <div>\r\n      name: <input value={name} onChange={handleNameChange} /> <br />\r\n      Number: <input value={number} onChange={handleNumberChange} /> <br />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\" onClick={handleSubmit}>add</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, handleDelete}) => {\r\n  return(\r\n    persons.map(person => \r\n      <p key={person.name}>\r\n        {person.name} {person.number}\r\n        <button id={person.id} name={person.name} onClick={handleDelete}>delete</button>\r\n      </p>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport FilterForm from './components/FilterForm'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/personService';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([\r\n    { name: 'Arto Hellas', number: '040-123456' },\r\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\r\n    { name: 'Dan Abramov', number: '12-43-234345' },\r\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\r\n  ])\r\n\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filterValue, setFilter] = useState('')\r\n  const [notification, setNotification] = useState({message: '', type: ''})\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(persons => setPersons(persons))\r\n  }, [])\r\n\r\n  const handleNewPerson = (event) => {\r\n    event.preventDefault()\r\n    let newPerson = {name: newName, number: newNumber}\r\n    let oldperson = persons.find(person => person.name === newName)\r\n    if(oldperson) {\r\n      if(window.confirm(`${newName} is already added to phonebook, want to update?`)) {\r\n        handleUpdate(oldperson.id, newPerson)\r\n      }\r\n      return\r\n    }\r\n    personService.create(newPerson)\r\n      .then(person => {\r\n        setPersons([...persons, person])\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setNotification({message: `Added ${newName}`, type: 'success'})\r\n        setTimeout(() => setNotification({}), 3000);\r\n      })\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handlePersonFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const filteredPersons = () => {\r\n    return persons.filter(person => person.name.toLowerCase().includes(filterValue))\r\n  }\r\n\r\n  const handlePersonDelete = (event) => {\r\n    let { id, name } = event.target\r\n    if(window.confirm(`Do you want to delete ${name}`)) {\r\n      const newPersons = persons.filter(person => person.id !== Number(id))\r\n      setPersons([...newPersons])\r\n      personService.remove(id).catch(error => {\r\n        setNotification({message: `Information already deleted from server ${error}`, type: 'error'})\r\n        setTimeout(() => setNotification({}), 3000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleUpdate = (id, newPerson) => {\r\n    personService.update(id, newPerson)\r\n      .then(servicePerson => {\r\n        setPersons(persons.map(person => person.id !== id ? person : servicePerson))\r\n        setNotification({message: `Updated ${newName}`, type: 'success'})\r\n        setTimeout(() => setNotification({}), 3000);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Notification {...notification} />\r\n\r\n      <h2>Phonebook</h2>\r\n      <FilterForm \r\n        onChange={handlePersonFilter} \r\n        value={filterValue} \r\n      />\r\n\r\n      <h2>add new</h2>\r\n      <PersonForm \r\n        name={newName}\r\n        number={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        handleSubmit={handleNewPerson}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons \r\n        persons={filteredPersons()}\r\n        handleDelete={handlePersonDelete}\r\n      />\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}